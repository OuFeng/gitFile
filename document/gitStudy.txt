1：	建立好存储git版本控制的文件夹，然后把git命令移到该目录并执行
	$ git init --不用文件名也不用注释
	说明：初始化版本控制的目录，把该目录从普通的目录初始成可以版本控制的目录
	注意：千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件
	开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题。比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱
	智行为带来的。建议你下载Notepad++代替记事本，不但功能强大，而且免费！
	
2：	用命令git add告诉Git，把文件添加到仓库
	$ git add gitStudy.txt   --需要文件名可是不需要注释
	说明：执行上面的命令，没有任何显示，这就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。
	
3： 用命令git commit告诉git,把文件提交到仓库：
	$ git commit -m "New a document 'gitStudy.txt'" --不需要文件名；注释不要有中文！会乱码！当然改底层设置中文不乱码也可以，可是自己趁这个机会好好学习英文也好呀！
	说明：-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。
	
	
	为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：
	$ git add file1.txt
	$ git add file2.txt file3.txt
	$ git commit -m "add 3 files."
	
4:  有用的指令：
	ls -ah
	备注：查看该目录下面的所有子文件
	vi test.txt
	备注：打开test.txt文件
	'shift' + ':' + 'q' 
	备注：退出vi编辑器
	'shift' + ':' + 'wq' 
	备注：保存并退出vi编辑器

5： 查询我的版本控制目录下的文件与最新的版本是否相同，查看修改的状态
	$ git status
	说明：git status命令可以让我们时刻掌握仓库当前的状态，会告诉我们哪个文件已经被更改了！可是具体更改了什么并没有说。如果想知道更改了什么需要下一步的指令；

6：	用git diff这个命令查看当前版本库到底更改了什么东西！
	$ git diff 
	说明：这个在中文环境下会出现乱码！就是说没什么用处
	
7：	版本回退
	
	
	
	
	
	
